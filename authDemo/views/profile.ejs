<!doctype html>
<html>
<head>
  <title>Node Authentication</title>
  <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
  <style>
      body        { word-wrap:break-word; }
  </style>
  <link rel="stylesheet" href="/css/style.css" type="text/css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
  <script src="/reload/reload.js"></script>
  
  <script>
    // this functions builds the testrun table
    function buildTableRows(array)
    {
      let markup = '';
      markup += "<tbody>";
      array.reverse().forEach(function(row, i){
        // because array is reverserd, indexes should be in reverse order aswell
        let index = array.length - 1 - i; 
        let serial = "<td></td>";
        let trace = "<td></td>";
        let firmware = "<td></td>";
        let status = "<td></td>";
        if (row.serial)
        {
          serial = `<td><a href="/download/serial/${index}">
            ${row.serial.filename}.${row.serial.filetype}
          </a></td>`;
        }
        if (row.trace)
        {
          trace = `<td><a href="/download/trace/${index}">
            ${row.trace.filename}.${row.trace.filetype}
          </a></td>`;
        }
        if (row.firmware)
        {
          firmware = `<td><a href="/download/firmware/${index}">
            ${row.firmware.filename}.${row.firmware.filetype}
          </a></td>`;
        }
        if (row.status)
        {
          status = `<td>${row.status}</td>`;
        }
        markup += `
        <tr> 
          <td>${row._id}</td>         
          <td>${row.date}</td>
          ${firmware}
          ${serial}
          ${trace}
          ${status}
        </tr> 
        `;
      });
      markup += "</tbody>";
      return markup;
    }

    $(document).ready(function(){
      $("#removetestruns").click(function(){
        // var result = confirm("Are you sure you want to delete all testruns?");
        // if (result) {
          // request removing all testruns
          $.post("/remove/testRuns/<%= email %>", function(data, status){});
        // }        
      });
      $("#removefirmwares").click(function(){
        // var result = confirm("Are you sure you want to delete all testruns?");
        // if (result) {
          // request removing all testruns
          $.post("/remove/firmwares/<%= email %>", function(data, status){});
        // }        
      });
    });

    var update_table = null; // variable as placeholder for jquery function
    $(function() { 
      function my_fun(user){ // jquery function to update table
        let testruns = buildTableRows(user.testRuns);
        let firmwares = buildTableRows(user.firmwares)
        $("#testruntable tbody").replaceWith(testruns);
        $("#firmwaretable tbody").replaceWith(firmwares);
      }  
      update_table = my_fun; // store function in variable to access it from js
    }) 

    // assume that API service is published on same server that is the server of this HTML file
    var source = new EventSource("../updates");
    source.onmessage = function(event) {
      var terminal = document.getElementById("terminal");
      var data = JSON.parse(event.data); // parse data received
      
      if(data["_id"]) // if data is passed, update table
      {
        update_table(data);
      }
      else // else just output what we received
      {
        // Here append the terminal with new data and handle automatic scrolling
        var isScrolledToBottom = terminal.scrollHeight - terminal.clientHeight <= terminal.scrollTop + 1;
        var newElement = document.createElement("div");
        newElement.innerHTML = data;
        terminal.appendChild(newElement);
        // scroll to bottom if isScrolledToBotto
        if(isScrolledToBottom)
          terminal.scrollTop = terminal.scrollHeight - terminal.clientHeight;
      }
    };
  </script>
</head>
<body>

<div class="container">
  <div class="page-header text-center">
    <h1><span class="fa fa-microchip"></span> Batteryless IoT Testbed</h1>
    <strong>email</strong>: <%= email %><br>
    <a href="/logout" class="btn btn-default btn-sm">Logout</a>
  </div>

  <div class="row">
    <div class="col-md-6">
      <!-- FIRMWARE -->
      <div class="well">
        <form action="/upload/firmware" method="post" enctype="multipart/form-data" target="formtarget">
          <h3>Upload new firmware</h3>
          <div class="form-group">
            <label>Firmware</label>
            <input type="file" class="form-control" name="file">
          </div>
          <button type="submit" class="btn btn-warning btn-lg">Submit</button>
          <button type="button" id="removefirmwares"  class="btn btn-danger btn-lg">Remove all firmwares</button>
        </form>

        <div class="table-wrapper-scroll-y">
          <table class="table table-striped" id="firmwaretable">
            <thead>
              <tr>
                <th>Id</th>
                <th>Date</th>
                <th>Firmware</th>
              </tr>    
            </thead>  
              <script>
                document.write(buildTableRows(<%- user %>.firmwares));
              </script>
          </table>
        </div>

      </div>

      <!-- UPLOAD TESTRUN -->
      <div class="well">
        <form action="/upload/testrun" method="post" enctype="multipart/form-data" target="formtarget">
          <div class="form-group">
            <label>Test run argument</label>
            <input type="text" class="form-control" name="argument">
          </div>
          <div class="form-group">
            <label>Binary</label>
            <input type="file" class="form-control" name="file">
          </div>
          <button type="submit" class="btn btn-warning btn-lg">Submit</button>
        </form>
      </div>
    </div>

    <!-- TERMINAL -->
    <div class="col-md-6">
      <div class="well">
        <h3>Terminal</h3>
        <div id="terminal" style="overflow:auto"></div>
      </div>
    </div>
  </div>

  <iframe name="formtarget"style="display:none"></iframe>

  <div class="row">
    <!-- TESTRUNS -->
    <div class="col-md-12">
      <div class="well">
        <div class="row">
          <div class="col-md-6">
            <h3><span class="fa fa-wrench"></span> Testruns </h3>
          </div>
          <div class="col-md-6">
            <span class="pull-right">
              <button id="removetestruns" class="btn btn-danger btn-lg">Remove all testruns</button>
            </span>
          </div>
        </div>
        
        <div class="table-wrapper-scroll-y">
          <table class="table table-striped" id="testruntable">
            <thead>
              <tr>
                <th>Id</th>
                <th>Date</th>
                <th>Firmware</th>
                <th>Serial output</th>
                <th>GPIO trace</th>
                <th>Status</th>               
              </tr>    
            </thead>  
              <script>
                document.write(buildTableRows(<%- user %>.testRuns));
              </script>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>
</body>
</html>
